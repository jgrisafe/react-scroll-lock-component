{"version":3,"sources":["../src/ScrollLock.jsx"],"names":["ScrollLock","setScrollingElement","r","scrollingElement","firstChild","onScrollHandler","e","elem","scrollTop","scrollHeight","clientHeight","wheelDelta","deltaY","isDeltaPositive","cancelScrollEvent","stopImmediatePropagation","preventDefault","returnValue","enabled","props","addEventListener","nextProps","removeEventListener","children","defaultProps"],"mappings":";;;;;;;;AAAA;;;;;;;;;;;;IAEMA,U;;;;;;;;;;;;;;8LAoBJC,mB,GAAsB,UAACC,CAAD,EAAO;AAC3B,YAAKC,gBAAL,GAAwBD,IAAIA,EAAEE,UAAN,GAAmBF,CAA3C;AACD,K,QAEDG,e,GAAkB,UAACC,CAAD,EAAO;AACvB,UAAMC,OAAO,MAAKJ,gBAAlB;AADuB,UAEfK,SAFe,GAE2BD,IAF3B,CAEfC,SAFe;AAAA,UAEJC,YAFI,GAE2BF,IAF3B,CAEJE,YAFI;AAAA,UAEUC,YAFV,GAE2BH,IAF3B,CAEUG,YAFV;;AAGvB,UAAMC,aAAaL,EAAEM,MAArB;AACA,UAAMC,kBAAkBF,aAAa,CAArC;;AAEA,UAAIE,mBAAmBF,aAAaF,eAAeC,YAAf,GAA8BF,SAAlE,EAA6E;AAC3ED,aAAKC,SAAL,GAAiBC,YAAjB;AACA,eAAO,MAAKK,iBAAL,CAAuBR,CAAvB,CAAP;AACD,OAHD,MAIK,IAAI,CAACO,eAAD,IAAoB,CAACF,UAAD,GAAcH,SAAtC,EAAiD;AACpDD,aAAKC,SAAL,GAAiB,CAAjB;AACA,eAAO,MAAKM,iBAAL,CAAuBR,CAAvB,CAAP;AACD;AACF,K,QAEDQ,iB,GAAoB,UAACR,CAAD,EAAO;AACzBA,QAAES,wBAAF;AACAT,QAAEU,cAAF;AACAV,QAAEW,WAAF,GAAgB,KAAhB;AACA,aAAO,KAAP;AACD,K;;;;;wCA5CmB;AAAA,UACVC,OADU,GACE,KAAKC,KADP,CACVD,OADU;;AAElB,UAAIA,OAAJ,EAAa;AACX,aAAKf,gBAAL,CAAsBiB,gBAAtB,CAAuC,OAAvC,EAAgD,KAAKf,eAArD,EAAsE,KAAtE;AACD;AACF;;;8CAEyBgB,S,EAAW;AACnC,UAAIA,UAAUH,OAAd,EAAuB;AACrB,aAAKf,gBAAL,CAAsBiB,gBAAtB,CAAuC,OAAvC,EAAgD,KAAKf,eAArD,EAAsE,KAAtE;AACD,OAFD,MAEO;AACL,aAAKF,gBAAL,CAAsBmB,mBAAtB,CAA0C,OAA1C,EAAmD,KAAKjB,eAAxD,EAAyE,KAAzE;AACD;AACF;;;2CAEsB;AACrB,WAAKF,gBAAL,CAAsBmB,mBAAtB,CAA0C,OAA1C,EAAmD,KAAKjB,eAAxD,EAAyE,KAAzE;AACD;;;6BA6BQ;AACP,aACE;AAAA;AAAA,UAAK,KAAK,KAAKJ,mBAAf;AACG,aAAKkB,KAAL,CAAWI;AADd,OADF;AAKD;;;;;;AAGHvB,WAAWwB,YAAX,GAA0B;AACxBN,WAAS;AADe,CAA1B;;kBAIelB,U","file":"ScrollLock.js","sourcesContent":["import React, { Component } from 'react';\n\nclass ScrollLock extends Component {\n  componentDidMount() {\n    const { enabled } = this.props\n    if (enabled) {\n      this.scrollingElement.addEventListener('wheel', this.onScrollHandler, false)\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.enabled) {\n      this.scrollingElement.addEventListener('wheel', this.onScrollHandler, false)\n    } else {\n      this.scrollingElement.removeEventListener('wheel', this.onScrollHandler, false)\n    }\n  }\n\n  componentWillUnmount() {\n    this.scrollingElement.removeEventListener('wheel', this.onScrollHandler, false);\n  }\n\n  setScrollingElement = (r) => {\n    this.scrollingElement = r ? r.firstChild : r;\n  };\n\n  onScrollHandler = (e) => {\n    const elem = this.scrollingElement;\n    const { scrollTop, scrollHeight, clientHeight } = elem;\n    const wheelDelta = e.deltaY;\n    const isDeltaPositive = wheelDelta > 0;\n\n    if (isDeltaPositive && wheelDelta > scrollHeight - clientHeight - scrollTop) {\n      elem.scrollTop = scrollHeight;\n      return this.cancelScrollEvent(e);\n    }\n    else if (!isDeltaPositive && -wheelDelta > scrollTop) {\n      elem.scrollTop = 0;\n      return this.cancelScrollEvent(e);\n    }\n  };\n\n  cancelScrollEvent = (e) => {\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    e.returnValue = false;\n    return false;\n  };\n\n  render() {\n    return (\n      <div ref={this.setScrollingElement}>\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nScrollLock.defaultProps = {\n  enabled: true\n};\n\nexport default ScrollLock;\n"]}